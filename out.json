{
	"id": 0,
	"name": "remeda",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 6,
			"name": "\"addProp\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/addProp.ts",
			"children": [
				{
					"id": 7,
					"name": "addProp",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 8,
							"name": "addProp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add a new property to an object.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.addProp(obj, prop, value)"
									},
									{
										"tag": "example",
										"text": "\n   R.addProp({firstName: 'john'}, 'lastName', 'doe') // => {firstName: 'john', lastName: 'doe'}"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Object\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 9,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 10,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 12,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the target object"
									},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 13,
									"name": "prop",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the property name"
									},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the property value"
									},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "typeParameter",
										"name": "T"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 15,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "addProp.ts",
													"line": 19,
													"character": 6
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 16,
							"name": "addProp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add a new property to an object.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.addProp(obj, prop, value)"
									},
									{
										"tag": "example",
										"text": "\n   R.addProp('lastName', 'doe')({firstName: 'john'}) // => {firstName: 'john', lastName: 'doe'}"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Object\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 17,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 18,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 19,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 20,
									"name": "prop",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the property name"
									},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 21,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the property value"
									},
									"type": {
										"type": "typeParameter",
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 23,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 24,
													"name": "obj",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 25,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"sources": [
																{
																	"fileName": "addProp.ts",
																	"line": 35,
																	"character": 18
																}
															]
														}
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "addProp.ts",
											"line": 35,
											"character": 2
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "addProp.ts",
							"line": 15,
							"character": 23
						},
						{
							"fileName": "addProp.ts",
							"line": 32,
							"character": 23
						},
						{
							"fileName": "addProp.ts",
							"line": 37,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						7
					]
				}
			],
			"sources": [
				{
					"fileName": "addProp.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 189,
			"name": "\"addProp.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/addProp.test.ts",
			"sources": [
				{
					"fileName": "addProp.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 190,
			"name": "\"anyPass\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/anyPass.ts",
			"children": [
				{
					"id": 191,
					"name": "anyPass",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 192,
							"name": "anyPass",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Determines whether any predicate returns true for the input data.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.anyPass(data, fns)"
									},
									{
										"tag": "example",
										"text": "\n   const isDivisibleBy3 = (x: number) = x % 3 === 0\n   const isDivisibleBy4 = (x: number) = x % 4 === 0\n   const fns = [isDivisibleBy3, isDivisibleBy4]\n   R.anyPass(8, fns) // => true\n   R.anyPass(11, fns) // => false"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 193,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 194,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The input data for predicates."
									},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 195,
									"name": "fns",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The list of predicates."
									},
									"type": {
										"type": "reference",
										"name": "Array",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 196,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 197,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 198,
																	"name": "data",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "typeParameter",
																		"name": "T"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"sources": [
														{
															"fileName": "anyPass.ts",
															"line": 18,
															"character": 47
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 199,
							"name": "anyPass",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Determines whether any predicate returns true for the input data.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.anyPass(fns)(data)"
									},
									{
										"tag": "example",
										"text": "\n   const isDivisibleBy3 = (x: number) = x % 3 === 0\n   const isDivisibleBy4 = (x: number) = x % 4 === 0\n   const fns = [isDivisibleBy3, isDivisibleBy4]\n   R.anyPass(fns)(8) // => true\n   R.anyPass(fns)(11) // => false"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 200,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 201,
									"name": "fns",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The list of predicates."
									},
									"type": {
										"type": "reference",
										"name": "Array",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 202,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 203,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 204,
																	"name": "data",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "typeParameter",
																		"name": "T"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"sources": [
														{
															"fileName": "anyPass.ts",
															"line": 35,
															"character": 13
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 205,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 206,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 207,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "anyPass.ts",
											"line": 36,
											"character": 2
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "anyPass.ts",
							"line": 18,
							"character": 23
						},
						{
							"fileName": "anyPass.ts",
							"line": 34,
							"character": 23
						},
						{
							"fileName": "anyPass.ts",
							"line": 38,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						191
					]
				}
			],
			"sources": [
				{
					"fileName": "anyPass.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 208,
			"name": "\"anyPass.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/anyPass.test.ts",
			"sources": [
				{
					"fileName": "anyPass.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 209,
			"name": "\"chunk\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/chunk.ts",
			"children": [
				{
					"id": 210,
					"name": "chunk",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 211,
							"name": "chunk",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Split an array into groups the length of `size`. If `array` can't be split evenly, the final chunk will be the remaining elements.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.chunk(array, size)"
									},
									{
										"tag": "example",
										"text": "\n   R.chunk(['a', 'b', 'c', 'd'], 2) // => [['a', 'b'], ['c', 'd']]\n   R.chunk(['a', 'b', 'c', 'd'], 3) // => [['a', 'b', 'c'], ['d']]"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 212,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 213,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the array"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 214,
									"name": "size",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the length of the chunk"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							}
						},
						{
							"id": 215,
							"name": "chunk",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Split an array into groups the length of `size`. If `array` can't be split evenly, the final chunk will be the remaining elements.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.chunk(size)(array)"
									},
									{
										"tag": "example",
										"text": "\n   R.chunk(2)(['a', 'b', 'c', 'd']) // => [['a', 'b'], ['c', 'd']]\n   R.chunk(3)(['a', 'b', 'c', 'd']) // => [['a', 'b', 'c'], ['d']]"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 216,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 217,
									"name": "size",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the length of the chunk"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 218,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 219,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 220,
													"name": "array",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "chunk.ts",
											"line": 28,
											"character": 39
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "chunk.ts",
							"line": 15,
							"character": 21
						},
						{
							"fileName": "chunk.ts",
							"line": 28,
							"character": 21
						},
						{
							"fileName": "chunk.ts",
							"line": 30,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						210
					]
				}
			],
			"sources": [
				{
					"fileName": "chunk.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 221,
			"name": "\"chunk.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/chunk.test.ts",
			"sources": [
				{
					"fileName": "chunk.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 222,
			"name": "\"clamp\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/clamp.ts",
			"children": [
				{
					"id": 223,
					"name": "clamp",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 224,
							"name": "clamp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Clamp the given value within the inclusive min and max bounds.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.clamp(value, { min, max });"
									},
									{
										"tag": "example",
										"text": "\n   clamp(10, { min: 20 }) // => 20\n   clamp(10, { max: 5 }) // => 5\n   clamp(10, { max: 20, min: 5 }) // => 10"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Number\n"
									}
								]
							},
							"parameters": [
								{
									"id": 225,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the number"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 226,
									"name": "limits",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the bounds limits"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 227,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "clamp.ts",
													"line": 18,
													"character": 9
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 228,
							"name": "clamp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Clamp the given value within the inclusive min and max bounds.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.clamp({ min, max })(value);"
									},
									{
										"tag": "example",
										"text": "\n   clamp({ min: 20 })(10) // => 20\n   clamp({ max: 5 })(10) // => 5\n   clamp({ max: 20, min: 5 })(10) // => 10"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Number\n"
									}
								]
							},
							"parameters": [
								{
									"id": 229,
									"name": "limits",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the bounds limits"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 230,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "clamp.ts",
													"line": 34,
													"character": 29
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 231,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 232,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 233,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "the number"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "clamp.ts",
											"line": 37,
											"character": 3
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "clamp.ts",
							"line": 16,
							"character": 21
						},
						{
							"fileName": "clamp.ts",
							"line": 34,
							"character": 21
						},
						{
							"fileName": "clamp.ts",
							"line": 39,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						223
					]
				}
			],
			"sources": [
				{
					"fileName": "clamp.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 234,
			"name": "\"clamp.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/clamp.test.ts",
			"sources": [
				{
					"fileName": "clamp.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 239,
			"name": "\"clone\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/clone.ts",
			"children": [
				{
					"id": 240,
					"name": "clone",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 241,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a deep copy of the value. Supported types: `Array`, `Object`, `Number`, `String`, `Boolean`, `Date`, `RegExp`. Functions are assigned by reference rather than copied.",
								"tags": [
									{
										"tag": "category",
										"text": "Object"
									},
									{
										"tag": "signature",
										"text": "R.clone(value)"
									},
									{
										"tag": "example",
										"text": "R.clone({foo: 'bar'}) // {foo: 'bar'}\n"
									}
								]
							},
							"parameters": [
								{
									"id": 242,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the object to clone"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "clone.ts",
							"line": 57,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						240
					]
				}
			],
			"sources": [
				{
					"fileName": "clone.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 243,
			"name": "\"clone.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/clone.test.ts",
			"sources": [
				{
					"fileName": "clone.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 244,
			"name": "\"compact\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/compact.ts",
			"children": [
				{
					"id": 245,
					"name": "compact",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 246,
							"name": "compact",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Filter out all falsey values. The values `false`, `null`, `0`, `\"\"`, `undefined`, and `NaN` are falsey.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.compact(array)"
									},
									{
										"tag": "example",
										"text": "\n   R.compact([0, 1, false, 2, '', 3]) // => [1, 2, 3]"
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 247,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 248,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the array to compact"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "unknown",
									"name": "T"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "compact.ts",
							"line": 10,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						245
					]
				}
			],
			"sources": [
				{
					"fileName": "compact.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 249,
			"name": "\"compact.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/compact.test.ts",
			"sources": [
				{
					"fileName": "compact.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 250,
			"name": "\"concat\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/concat.ts",
			"children": [
				{
					"id": 251,
					"name": "concat",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 252,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Combines two arrays.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.concat(arr1, arr2);"
									},
									{
										"tag": "example",
										"text": "\n   R.concat([1, 2, 3], ['a']) // [1, 2, 3, 'a']"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 253,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 254,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 255,
									"name": "arr1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the first array"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 256,
									"name": "arr2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the second array"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "K"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "T"
											},
											{
												"type": "typeParameter",
												"name": "K"
											}
										]
									}
								]
							}
						},
						{
							"id": 257,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Combines two arrays.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.concat(arr2)(arr1);"
									},
									{
										"tag": "example",
										"text": "\n   R.concat(['a'])([1, 2, 3]) // [1, 2, 3, 'a']"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 258,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 259,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 260,
									"name": "arr2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the second array"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "K"
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 261,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 262,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 263,
													"name": "arr1",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Array",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "typeParameter",
																"name": "T"
															},
															{
																"type": "typeParameter",
																"name": "K"
															}
														]
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "concat.ts",
											"line": 26,
											"character": 40
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "concat.ts",
							"line": 14,
							"character": 22
						},
						{
							"fileName": "concat.ts",
							"line": 26,
							"character": 22
						},
						{
							"fileName": "concat.ts",
							"line": 28,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						251
					]
				}
			],
			"sources": [
				{
					"fileName": "concat.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 264,
			"name": "\"concat.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/concat.test.ts",
			"sources": [
				{
					"fileName": "concat.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 265,
			"name": "\"createPipe\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/createPipe.ts",
			"children": [
				{
					"id": 266,
					"name": "createPipe",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 267,
							"name": "createPipe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a data-last pipe function. First function must be always annotated. Other functions are automatically inferred.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.createPipe(op1, op2, op3)(data);"
									},
									{
										"tag": "example",
										"text": "\n   R.createPipe(\n     (x: number) => x * 2,\n     x => x * 3\n   )(1) // => 6"
									},
									{
										"tag": "category",
										"text": "Function\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 268,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 269,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 270,
									"name": "op1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 271,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 272,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 273,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "A"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "B"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 12,
													"character": 37
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 274,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 275,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 276,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "A"
													}
												}
											],
											"type": {
												"type": "typeParameter",
												"name": "B"
											}
										}
									],
									"sources": [
										{
											"fileName": "createPipe.ts",
											"line": 12,
											"character": 55
										}
									]
								}
							}
						},
						{
							"id": 277,
							"name": "createPipe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 278,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 279,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 280,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 281,
									"name": "op1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 282,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 283,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 284,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "A"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "B"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 15,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 285,
									"name": "op2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 286,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 287,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 288,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "B"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "C"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 16,
													"character": 6
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 289,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 290,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 291,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "A"
													}
												}
											],
											"type": {
												"type": "typeParameter",
												"name": "C"
											}
										}
									],
									"sources": [
										{
											"fileName": "createPipe.ts",
											"line": 17,
											"character": 2
										}
									]
								}
							}
						},
						{
							"id": 292,
							"name": "createPipe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 293,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 294,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 295,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 296,
									"name": "D",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 297,
									"name": "op1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 298,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 299,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 300,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "A"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "B"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 20,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 301,
									"name": "op2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 302,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 303,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 304,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "B"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "C"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 21,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 305,
									"name": "op3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 306,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 307,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 308,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "C"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "D"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 22,
													"character": 6
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 309,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 310,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 311,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "A"
													}
												}
											],
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"sources": [
										{
											"fileName": "createPipe.ts",
											"line": 23,
											"character": 2
										}
									]
								}
							}
						},
						{
							"id": 312,
							"name": "createPipe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 313,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 314,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 315,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 316,
									"name": "D",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 317,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 318,
									"name": "op1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 319,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 320,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 321,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "A"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "B"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 26,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 322,
									"name": "op2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 323,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 324,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 325,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "B"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "C"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 27,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 326,
									"name": "op3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 327,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 328,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 329,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "C"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "D"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 28,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 330,
									"name": "op4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 331,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 332,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 333,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "D"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 29,
													"character": 6
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 334,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 335,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 336,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "A"
													}
												}
											],
											"type": {
												"type": "typeParameter",
												"name": "E"
											}
										}
									],
									"sources": [
										{
											"fileName": "createPipe.ts",
											"line": 30,
											"character": 2
										}
									]
								}
							}
						},
						{
							"id": 337,
							"name": "createPipe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 338,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 339,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 340,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 341,
									"name": "D",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 342,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 343,
									"name": "F",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 344,
									"name": "op1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 345,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 346,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 347,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "A"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "B"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 33,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 348,
									"name": "op2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 349,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 350,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 351,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "B"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "C"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 34,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 352,
									"name": "op3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 353,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 354,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 355,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "C"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "D"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 35,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 356,
									"name": "op4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 357,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 358,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 359,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "D"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 36,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 360,
									"name": "op5",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 361,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 362,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 363,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "F"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 37,
													"character": 6
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 364,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 365,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 366,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "A"
													}
												}
											],
											"type": {
												"type": "typeParameter",
												"name": "F"
											}
										}
									],
									"sources": [
										{
											"fileName": "createPipe.ts",
											"line": 38,
											"character": 2
										}
									]
								}
							}
						},
						{
							"id": 367,
							"name": "createPipe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 368,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 369,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 370,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 371,
									"name": "D",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 372,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 373,
									"name": "F",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 374,
									"name": "G",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 375,
									"name": "op1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 376,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 377,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 378,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "A"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "B"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 41,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 379,
									"name": "op2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 380,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 381,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 382,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "B"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "C"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 42,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 383,
									"name": "op3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 384,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 385,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 386,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "C"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "D"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 43,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 387,
									"name": "op4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 388,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 389,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 390,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "D"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 44,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 391,
									"name": "op5",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 392,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 393,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 394,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "F"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 45,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 395,
									"name": "op6",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 396,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 397,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 398,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "F"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "G"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 46,
													"character": 6
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 399,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 400,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 401,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "A"
													}
												}
											],
											"type": {
												"type": "typeParameter",
												"name": "G"
											}
										}
									],
									"sources": [
										{
											"fileName": "createPipe.ts",
											"line": 47,
											"character": 2
										}
									]
								}
							}
						},
						{
							"id": 402,
							"name": "createPipe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 403,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 404,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 405,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 406,
									"name": "D",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 407,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 408,
									"name": "F",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 409,
									"name": "G",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 410,
									"name": "H",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 411,
									"name": "op1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 412,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 413,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 414,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "A"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "B"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 50,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 415,
									"name": "op2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 416,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 417,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 418,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "B"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "C"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 51,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 419,
									"name": "op3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 420,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 421,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 422,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "C"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "D"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 52,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 423,
									"name": "op4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 424,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 425,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 426,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "D"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 53,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 427,
									"name": "op5",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 428,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 429,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 430,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "F"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 54,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 431,
									"name": "op6",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 432,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 433,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 434,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "F"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "G"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 55,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 435,
									"name": "op7",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 436,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 437,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 438,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "G"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "H"
													}
												}
											],
											"sources": [
												{
													"fileName": "createPipe.ts",
													"line": 56,
													"character": 6
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 439,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 440,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 441,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "A"
													}
												}
											],
											"type": {
												"type": "typeParameter",
												"name": "H"
											}
										}
									],
									"sources": [
										{
											"fileName": "createPipe.ts",
											"line": 57,
											"character": 2
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "createPipe.ts",
							"line": 12,
							"character": 26
						},
						{
							"fileName": "createPipe.ts",
							"line": 14,
							"character": 26
						},
						{
							"fileName": "createPipe.ts",
							"line": 19,
							"character": 26
						},
						{
							"fileName": "createPipe.ts",
							"line": 25,
							"character": 26
						},
						{
							"fileName": "createPipe.ts",
							"line": 32,
							"character": 26
						},
						{
							"fileName": "createPipe.ts",
							"line": 40,
							"character": 26
						},
						{
							"fileName": "createPipe.ts",
							"line": 49,
							"character": 26
						},
						{
							"fileName": "createPipe.ts",
							"line": 59,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						266
					]
				}
			],
			"sources": [
				{
					"fileName": "createPipe.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 442,
			"name": "\"createPipe.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/createPipe.test.ts",
			"sources": [
				{
					"fileName": "createPipe.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 443,
			"name": "\"difference\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/difference.ts",
			"children": [
				{
					"id": 444,
					"name": "difference",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 445,
							"name": "difference",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Excludes the values from `other` array.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.difference(array, other)"
									},
									{
										"tag": "example",
										"text": "\n   R.difference([1, 2, 3, 4], [2, 5, 3]) // => [1, 4]"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 446,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 447,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the source array"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 448,
									"name": "other",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the values to exclude"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "T"
								}
							}
						},
						{
							"id": 449,
							"name": "difference",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Excludes the values from `other` array.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.difference(other)(array)"
									},
									{
										"tag": "example",
										"text": "\n   R.difference([2, 5, 3])([1, 2, 3, 4]) // => [1, 4]"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 450,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 451,
									"name": "other",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the values to exclude"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 452,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 453,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 454,
													"name": "array",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "difference.ts",
											"line": 26,
											"character": 42
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "difference.ts",
							"line": 14,
							"character": 26
						},
						{
							"fileName": "difference.ts",
							"line": 26,
							"character": 26
						},
						{
							"fileName": "difference.ts",
							"line": 28,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						444
					]
				}
			],
			"sources": [
				{
					"fileName": "difference.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 455,
			"name": "\"difference.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/difference.test.ts",
			"sources": [
				{
					"fileName": "difference.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 456,
			"name": "\"dropLast\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/dropLast.ts",
			"children": [
				{
					"id": 457,
					"name": "dropLast",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 458,
							"name": "dropLast",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes last `n` elements from the `array`.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.dropLast(array, n)"
									},
									{
										"tag": "example",
										"text": "\n   R.dropLast([1, 2, 3, 4, 5], 2) // => [1, 2, 3]"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 459,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 460,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the target array"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 461,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the number of elements to skip"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "T"
								}
							}
						},
						{
							"id": 462,
							"name": "dropLast",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes last `n` elements from the `array`.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.dropLast(n)(array)"
									},
									{
										"tag": "example",
										"text": "\n   R.dropLast(2)([1, 2, 3, 4, 5]) // => [1, 2, 3]"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 463,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 464,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the number of elements to skip"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 465,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 466,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 467,
													"name": "array",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "the target array"
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "dropLast.ts",
											"line": 27,
											"character": 39
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "dropLast.ts",
							"line": 14,
							"character": 24
						},
						{
							"fileName": "dropLast.ts",
							"line": 27,
							"character": 24
						},
						{
							"fileName": "dropLast.ts",
							"line": 29,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						457
					]
				}
			],
			"sources": [
				{
					"fileName": "dropLast.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 468,
			"name": "\"dropLast.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/dropLast.test.ts",
			"sources": [
				{
					"fileName": "dropLast.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 469,
			"name": "\"equals\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/equals.ts",
			"children": [
				{
					"id": 470,
					"name": "equals",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 471,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if its arguments are equivalent, false otherwise.\nNOTE: Doesn't handle cyclical data structures.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.equals(a, b)"
									},
									{
										"tag": "example",
										"text": "\n   R.equals(1, 1) //=> true\n   R.equals(1, '1') //=> false\n   R.equals([1, 2, 3], [1, 2, 3]) //=> true"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"parameters": [
								{
									"id": 472,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the first object to compare"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 473,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the second object to compare"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 474,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if its arguments are equivalent, false otherwise.\nNOTE: Doesn't handle cyclical data structures.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.equals(b)(a)"
									},
									{
										"tag": "example",
										"text": "\n   R.equals(1)(1) //=> true\n   R.equals('1')(1) //=> false\n   R.equals([1, 2, 3])([1, 2, 3]) //=> true"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"parameters": [
								{
									"id": 475,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the first object to compare"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 476,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 477,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 478,
													"name": "b",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "the second object to compare"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "equals.ts",
											"line": 38,
											"character": 31
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "equals.ts",
							"line": 22,
							"character": 22
						},
						{
							"fileName": "equals.ts",
							"line": 38,
							"character": 22
						},
						{
							"fileName": "equals.ts",
							"line": 40,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						470
					]
				}
			],
			"sources": [
				{
					"fileName": "equals.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 479,
			"name": "\"equals.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/equals.test.ts",
			"sources": [
				{
					"fileName": "equals.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 480,
			"name": "\"filter\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/filter.ts",
			"children": [
				{
					"id": 481,
					"name": "filter",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 482,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Filter the elements of an array that meet the condition specified in a callback function.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.filter(array, fn)"
									},
									{
										"tag": "example",
										"text": "\n   R.filter([1, 2, 3], x => x % 2 === 1) // => [1, 3]"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 483,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 484,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The array to filter."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 485,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the callback function."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 486,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 487,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 488,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "filter.ts",
													"line": 14,
													"character": 41
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "T"
								}
							}
						},
						{
							"id": 489,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Filter the elements of an array that meet the condition specified in a callback function.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.filter(fn)(array)"
									},
									{
										"tag": "example",
										"text": "\n   R.filter(x => x % 2 === 1)([1, 2, 3]) // => [1, 3]"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 490,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 491,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the callback function."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 492,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 493,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 494,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "filter.ts",
													"line": 26,
													"character": 29
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 495,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 496,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 497,
													"name": "items",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "filter.ts",
											"line": 26,
											"character": 53
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "filter.ts",
							"line": 14,
							"character": 22
						},
						{
							"fileName": "filter.ts",
							"line": 26,
							"character": 22
						},
						{
							"fileName": "filter.ts",
							"line": 28,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						481
					]
				}
			],
			"sources": [
				{
					"fileName": "filter.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 498,
			"name": "\"filter.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/filter.test.ts",
			"sources": [
				{
					"fileName": "filter.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 499,
			"name": "\"find\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/find.ts",
			"children": [
				{
					"id": 500,
					"name": "find",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 501,
							"name": "find",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the value of the first element in the array where predicate is true, and undefined otherwise.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.find(items, fn)"
									},
									{
										"tag": "example",
										"text": "\n   R.find([1, 3, 4, 6], n => n % 2 === 0) // => 4"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 502,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 503,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 504,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the predicate"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 505,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 506,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 507,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "find.ts",
													"line": 14,
													"character": 39
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						},
						{
							"id": 508,
							"name": "find",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the value of the first element in the array where predicate is true, and undefined otherwise.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.find(fn)(items)"
									},
									{
										"tag": "example",
										"text": "\n   R.pipe(\n     [1, 3, 4, 6],\n     R.find(n => n % 2 === 0)\n   ) // => 4"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 509,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 510,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the predicate"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 511,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 512,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 513,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "find.ts",
													"line": 30,
													"character": 5
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 514,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 515,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 516,
													"name": "array",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "find.ts",
											"line": 31,
											"character": 2
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "find.ts",
							"line": 14,
							"character": 20
						},
						{
							"fileName": "find.ts",
							"line": 29,
							"character": 20
						},
						{
							"fileName": "find.ts",
							"line": 33,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						500
					]
				}
			],
			"sources": [
				{
					"fileName": "find.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 517,
			"name": "\"find.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/find.test.ts",
			"sources": [
				{
					"fileName": "find.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 518,
			"name": "\"findIndex\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/findIndex.ts",
			"children": [
				{
					"id": 519,
					"name": "findIndex",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 520,
							"name": "findIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of the first element in the array where predicate is true, and -1 otherwise.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.findIndex(items, fn)"
									},
									{
										"tag": "example",
										"text": "\n   R.findIndex([1, 3, 4, 6], n => n % 2 === 0) // => 2"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 521,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 522,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 523,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the predicate"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 524,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 525,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 526,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "findIndex.ts",
													"line": 14,
													"character": 44
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 527,
							"name": "findIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of the first element in the array where predicate is true, and -1 otherwise.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.findIndex(fn)(items)"
									},
									{
										"tag": "example",
										"text": "\n   R.pipe(\n     [1, 3, 4, 6],\n     R.findIndex(n => n % 2 === 0)\n   ) // => 4"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 528,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 529,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the predicate"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 530,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 531,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 532,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "findIndex.ts",
													"line": 30,
													"character": 32
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 533,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 534,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 535,
													"name": "array",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "findIndex.ts",
											"line": 30,
											"character": 55
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "findIndex.ts",
							"line": 14,
							"character": 25
						},
						{
							"fileName": "findIndex.ts",
							"line": 30,
							"character": 25
						},
						{
							"fileName": "findIndex.ts",
							"line": 32,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						519
					]
				}
			],
			"sources": [
				{
					"fileName": "findIndex.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 536,
			"name": "\"findIndex.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/findIndex.test.ts",
			"sources": [
				{
					"fileName": "findIndex.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 542,
			"name": "\"flatMap\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/flatMap.ts",
			"children": [
				{
					"id": 543,
					"name": "flatMap",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 544,
							"name": "flatMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Map each element of an array using a defined callback function and flatten the mapped result.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.flatMap(array, fn)"
									},
									{
										"tag": "example",
										"text": "\n   R.flatMap([1, 2, 3], x => [x, x * 10]) // => [1, 10, 2, 20, 3, 30]"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 545,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 546,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 547,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The array to map."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 548,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The function mapper."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 549,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 550,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 551,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "typeParameter",
																"name": "K"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "typeParameter",
																	"name": "K"
																}
															}
														]
													}
												}
											],
											"sources": [
												{
													"fileName": "flatMap.ts",
													"line": 15,
													"character": 45
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "K"
								}
							}
						},
						{
							"id": 552,
							"name": "flatMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Map each element of an array using a defined callback function and flatten the mapped result.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.flatMap(fn)(array)"
									},
									{
										"tag": "example",
										"text": "\n   R.flatMap(x => [x, x * 10])([1, 2, 3]) // => [1, 10, 2, 20, 3, 30]"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 553,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 554,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 555,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The function mapper."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 556,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 557,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 558,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "typeParameter",
																"name": "K"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "typeParameter",
																	"name": "K"
																}
															}
														]
													}
												}
											],
											"sources": [
												{
													"fileName": "flatMap.ts",
													"line": 28,
													"character": 33
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 559,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 560,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 561,
													"name": "array",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The array to map."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "K"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "flatMap.ts",
											"line": 28,
											"character": 57
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "flatMap.ts",
							"line": 15,
							"character": 23
						},
						{
							"fileName": "flatMap.ts",
							"line": 28,
							"character": 23
						},
						{
							"fileName": "flatMap.ts",
							"line": 30,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						543
					]
				}
			],
			"sources": [
				{
					"fileName": "flatMap.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 562,
			"name": "\"flatMap.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/flatMap.test.ts",
			"sources": [
				{
					"fileName": "flatMap.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 537,
			"name": "\"flatten\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/flatten.ts",
			"children": [
				{
					"id": 538,
					"name": "flatten",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 539,
							"name": "flatten",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Flattens `array` a single level deep.",
								"tags": [
									{
										"tag": "signature",
										"text": "R.flatten(array)"
									},
									{
										"tag": "example",
										"text": "\n   flatten([[1, 2], [3], [4, 5]]) // => [1, 2, 3, 4, 5]"
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 540,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 541,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the target array"
									},
									"type": {
										"type": "reference",
										"name": "Array",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Flatten",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "flatten.ts",
							"line": 11,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						538
					]
				}
			],
			"sources": [
				{
					"fileName": "flatten.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 563,
			"name": "\"flatten.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/flatten.test.ts",
			"sources": [
				{
					"fileName": "flatten.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 564,
			"name": "\"flattenDeep\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/flattenDeep.ts",
			"children": [
				{
					"id": 565,
					"name": "flattenDeep",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 566,
							"name": "flattenDeep",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Recursively flattens `array`.",
								"tags": [
									{
										"tag": "signature",
										"text": "R.flattenDeep(array)"
									},
									{
										"tag": "example",
										"text": "\n   R.flattenDeep([[1, 2], [[3], [4, 5]]]) // => [1, 2, 3, 4, 5]"
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 567,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 568,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the target array"
									},
									"type": {
										"type": "reference",
										"name": "Array",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "FlattenDeep",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "flattenDeep.ts",
							"line": 14,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						565
					]
				}
			],
			"sources": [
				{
					"fileName": "flattenDeep.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 569,
			"name": "\"flattenDeep.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/flattenDeep.test.ts",
			"sources": [
				{
					"fileName": "flattenDeep.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 570,
			"name": "\"groupBy\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/groupBy.ts",
			"children": [
				{
					"id": 571,
					"name": "groupBy",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Splits a collection into sets, grouped by the result of running each value through `fn`.",
						"tags": [
							{
								"tag": "signature",
								"text": "\n   R.groupBy(array, fn)"
							},
							{
								"tag": "example",
								"text": "\n   R.pipe(['one', 'two', 'three'], R.groupBy(x => x.length)) // => {3: ['one', 'two'], 5: ['three']}"
							},
							{
								"tag": "data_last",
								"text": ""
							},
							{
								"tag": "category",
								"text": "Array\n"
							}
						]
					},
					"signatures": [
						{
							"id": 572,
							"name": "groupBy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Splits a collection into sets, grouped by the result of running each value through `fn`.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.groupBy(array, fn)"
									},
									{
										"tag": "example",
										"text": "\n   R.groupBy(['one', 'two', 'three'], x => x.length) // => {3: ['one', 'two'], 5: ['three']}"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 573,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 574,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the items to group"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 575,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "the grouping function"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 576,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 577,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 578,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "groupBy.ts",
													"line": 16,
													"character": 5
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Record",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								]
							}
						},
						{
							"id": 579,
							"name": "groupBy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Splits a collection into sets, grouped by the result of running each value through `fn`."
							},
							"typeParameter": [
								{
									"id": 580,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 581,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "the grouping function"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 582,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 583,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 584,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "groupBy.ts",
													"line": 20,
													"character": 5
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 585,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 586,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 587,
													"name": "array",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Record",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "groupBy.ts",
											"line": 21,
											"character": 2
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "groupBy.ts",
							"line": 14,
							"character": 23
						},
						{
							"fileName": "groupBy.ts",
							"line": 19,
							"character": 23
						},
						{
							"fileName": "groupBy.ts",
							"line": 33,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						571
					]
				}
			],
			"sources": [
				{
					"fileName": "groupBy.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 588,
			"name": "\"groupBy.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/groupBy.test.ts",
			"sources": [
				{
					"fileName": "groupBy.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 589,
			"name": "\"indexBy\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/indexBy.ts",
			"children": [
				{
					"id": 590,
					"name": "indexBy",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 591,
							"name": "indexBy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts a list of objects into an object indexing the objects by the given key.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.indexBy(array, fn)"
									},
									{
										"tag": "example",
										"text": "\n   R.groupBy(['one', 'two', 'three'], x => x.length) // => {3: 'two', 5: 'three'}"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 592,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 593,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the array"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 594,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the indexing function"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 595,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 596,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 597,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "indexBy.ts",
													"line": 14,
													"character": 42
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Record",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							}
						},
						{
							"id": 598,
							"name": "indexBy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts a list of objects into an object indexing the objects by the given key.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.indexBy(fn)(array)"
									},
									{
										"tag": "example",
										"text": "\n   R.pipe(\n     ['one', 'two', 'three'],\n     R.groupBy(x => x.length)\n   ) // => {3: 'two', 5: 'three'}"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 599,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 600,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the indexing function"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 601,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 602,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 603,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "indexBy.ts",
													"line": 31,
													"character": 5
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 604,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 605,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 606,
													"name": "array",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "the array"
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Record",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "indexBy.ts",
											"line": 32,
											"character": 2
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "indexBy.ts",
							"line": 14,
							"character": 23
						},
						{
							"fileName": "indexBy.ts",
							"line": 30,
							"character": 23
						},
						{
							"fileName": "indexBy.ts",
							"line": 34,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						590
					]
				}
			],
			"sources": [
				{
					"fileName": "indexBy.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 607,
			"name": "\"indexBy.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/indexBy.test.ts",
			"sources": [
				{
					"fileName": "indexBy.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 608,
			"name": "\"intersection\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/intersection.ts",
			"children": [
				{
					"id": 609,
					"name": "intersection",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 610,
							"name": "intersection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a list of elements that exist in both array.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.intersection(source, other)"
									},
									{
										"tag": "example",
										"text": "\n   R.intersection([1, 2, 3], [2, 3, 5]) // => [2, 3]"
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 611,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 612,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the first array"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 613,
									"name": "other",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the second array"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "unknown",
									"name": "T"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "intersection.ts",
							"line": 11,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						609
					]
				}
			],
			"sources": [
				{
					"fileName": "intersection.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 614,
			"name": "\"intersection.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/intersection.test.ts",
			"sources": [
				{
					"fileName": "intersection.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 615,
			"name": "\"last\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/last.ts",
			"children": [
				{
					"id": 616,
					"name": "last",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 617,
							"name": "last",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the last element of `array`.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.last(array)"
									},
									{
										"tag": "example",
										"text": "\n   R.last([1, 2, 3]) // => 3\n   R.last([]) // => undefined"
									},
									{
										"tag": "category",
										"text": "array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 618,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 619,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the array"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "unknown",
								"name": "T"
							}
						}
					],
					"sources": [
						{
							"fileName": "last.ts",
							"line": 11,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						616
					]
				}
			],
			"sources": [
				{
					"fileName": "last.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 620,
			"name": "\"last.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/last.test.ts",
			"sources": [
				{
					"fileName": "last.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 621,
			"name": "\"map\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/map.ts",
			"children": [
				{
					"id": 622,
					"name": "map",
					"kind": 2,
					"kindString": "Module",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 623,
							"name": "map",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Map each element of an array using a defined callback function.\nIndexed version is supported.",
								"returns": "The new mapped array.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.map(array, fn)\n   R.map.indexed(array, fn)"
									},
									{
										"tag": "example",
										"text": "\n   R.map([1, 2, 3], x => x * 2) // => [2, 4, 6]\n   R.map.indexed([0, 0, 0], (x, i) => i) // => [0, 1, 2]"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 624,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 625,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 626,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The array to map."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 627,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The function mapper."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 628,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 629,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 630,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "K"
													}
												}
											],
											"sources": [
												{
													"fileName": "map.ts",
													"line": 18,
													"character": 41
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "K"
								}
							}
						},
						{
							"id": 631,
							"name": "map",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Map each value of an object using a defined callback function.\nIndexed version is supported.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.map(fn)(array)\n   R.map.indexed(fn)(array)"
									},
									{
										"tag": "example",
										"text": "\n   R.pipe([0, 1, 2], R.map(x => x * 2)) // => [2, 4, 6]\n   R.pipe([0, 0, 0], R.map.indexed((x, i) => i)) // => [0, 1, 2]"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 632,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 633,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 634,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the function mapper"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 635,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 636,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 637,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "K"
													}
												}
											],
											"sources": [
												{
													"fileName": "map.ts",
													"line": 33,
													"character": 29
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 638,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 639,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 640,
													"name": "array",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "K"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "map.ts",
											"line": 33,
											"character": 47
										}
									]
								}
							}
						}
					],
					"children": [
						{
							"id": 641,
							"name": "indexed",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "map.ts",
									"line": 58,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "MapIndexed"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								641
							]
						}
					],
					"sources": [
						{
							"fileName": "map.ts",
							"line": 18,
							"character": 19
						},
						{
							"fileName": "map.ts",
							"line": 33,
							"character": 19
						},
						{
							"fileName": "map.ts",
							"line": 35,
							"character": 19
						},
						{
							"fileName": "map.ts",
							"line": 57,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						622
					]
				}
			],
			"sources": [
				{
					"fileName": "map.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 642,
			"name": "\"map.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/map.test.ts",
			"sources": [
				{
					"fileName": "map.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 643,
			"name": "\"mapKeys\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/mapKeys.ts",
			"children": [
				{
					"id": 644,
					"name": "mapKeys",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 645,
							"name": "mapKeys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Maps keys of `object` and keeps the same values.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.mapKeys(object, fn)"
									},
									{
										"tag": "example",
										"text": "\n   R.mapKeys({a: 1, b: 2}, (key, value) => key + value) // => { a1: 1, b2: 2 }"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Object\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 646,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 647,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 648,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the object to map"
									},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 649,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the mapping function"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 650,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 651,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 652,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "typeParameter",
																	"name": "T"
																}
															}
														},
														{
															"id": 653,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "unknown",
																"name": "T[keyof T]"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "mapKeys.ts",
													"line": 14,
													"character": 5
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 654,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 655,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 656,
												"name": "x",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"sources": [
										{
											"fileName": "mapKeys.ts",
											"line": 15,
											"character": 2
										}
									]
								}
							}
						},
						{
							"id": 657,
							"name": "mapKeys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Maps keys of `object` and keeps the same values.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.mapKeys(fn)(object)"
									},
									{
										"tag": "example",
										"text": "\n   R.pipe({a: 1, b: 2}, R.mapKeys((key, value) => key + value)) // => { a1: 1, b2: 2 }"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Object\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 658,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 659,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 660,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the mapping function"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 661,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 662,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 663,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "typeParameter",
																	"name": "T"
																}
															}
														},
														{
															"id": 664,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "unknown",
																"name": "T[keyof T]"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "mapKeys.ts",
													"line": 28,
													"character": 5
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 665,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 666,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 667,
													"name": "object",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 668,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 669,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 670,
																"name": "x",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													},
													"sources": [
														{
															"fileName": "mapKeys.ts",
															"line": 29,
															"character": 17
														}
													]
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "mapKeys.ts",
											"line": 29,
											"character": 2
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "mapKeys.ts",
							"line": 12,
							"character": 23
						},
						{
							"fileName": "mapKeys.ts",
							"line": 27,
							"character": 23
						},
						{
							"fileName": "mapKeys.ts",
							"line": 31,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						644
					]
				}
			],
			"sources": [
				{
					"fileName": "mapKeys.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 671,
			"name": "\"mapKeys.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/mapKeys.test.ts",
			"sources": [
				{
					"fileName": "mapKeys.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 672,
			"name": "\"merge\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/merge.ts",
			"children": [
				{
					"id": 673,
					"name": "merge",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 674,
							"name": "merge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Merges two objects. The same as `Object.assign`.\n`b` object will override properties of `a`.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.merge(a, b)"
									},
									{
										"tag": "example",
										"text": "\n   R.merge({ x: 1, y: 2 }, { y: 10, z: 2 }) // => { x: 1, y: 10, z: 2 }"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Object\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 675,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 676,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 677,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the first object"
									},
									"type": {
										"type": "typeParameter",
										"name": "A"
									}
								},
								{
									"id": 678,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the second object"
									},
									"type": {
										"type": "typeParameter",
										"name": "B"
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "typeParameter",
										"name": "A"
									},
									{
										"type": "typeParameter",
										"name": "B"
									}
								]
							}
						},
						{
							"id": 679,
							"name": "merge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Merges two objects. The same as `Object.assign`. `b` object will override properties of `a`.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.merge(b)(a)"
									},
									{
										"tag": "example",
										"text": "\n   R.merge({ y: 10, z: 2 })({ x: 1, y: 2 }) // => { x: 1, y: 10, z: 2 }"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Object\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 680,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 681,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 682,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the second object"
									},
									"type": {
										"type": "typeParameter",
										"name": "B"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 683,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 684,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 685,
													"name": "a",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "A"
													}
												}
											],
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "typeParameter",
														"name": "A"
													},
													{
														"type": "typeParameter",
														"name": "B"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "merge.ts",
											"line": 27,
											"character": 34
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "merge.ts",
							"line": 15,
							"character": 21
						},
						{
							"fileName": "merge.ts",
							"line": 27,
							"character": 21
						},
						{
							"fileName": "merge.ts",
							"line": 29,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						673
					]
				}
			],
			"sources": [
				{
					"fileName": "merge.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 686,
			"name": "\"merge.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/merge.test.ts",
			"sources": [
				{
					"fileName": "merge.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 687,
			"name": "\"mergeAll\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/mergeAll.ts",
			"children": [
				{
					"id": 688,
					"name": "mergeAll",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 689,
							"name": "mergeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Merges a list of objects into a single object.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.mergeAll(objects)"
									},
									{
										"tag": "example",
										"text": "\n   R.mergeAll([{ a: 1, b: 1 }, { b: 2, c: 3 }, { d: 10 }]) // => { a: 1, b: 2, c: 3, d: 10 }"
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 690,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 691,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the array of objects"
									},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "typeParameter",
												"name": "A"
											}
										]
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "A"
							}
						},
						{
							"id": 692,
							"name": "mergeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 693,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 694,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 695,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "typeParameter",
												"name": "A"
											},
											{
												"type": "typeParameter",
												"name": "B"
											}
										]
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "typeParameter",
										"name": "A"
									},
									{
										"type": "typeParameter",
										"name": "B"
									}
								]
							}
						},
						{
							"id": 696,
							"name": "mergeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 697,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 698,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 699,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 700,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "typeParameter",
												"name": "A"
											},
											{
												"type": "typeParameter",
												"name": "B"
											},
											{
												"type": "typeParameter",
												"name": "C"
											}
										]
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "typeParameter",
										"name": "A"
									},
									{
										"type": "typeParameter",
										"name": "B"
									},
									{
										"type": "typeParameter",
										"name": "C"
									}
								]
							}
						},
						{
							"id": 701,
							"name": "mergeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 702,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 703,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 704,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 705,
									"name": "D",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 706,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "typeParameter",
												"name": "A"
											},
											{
												"type": "typeParameter",
												"name": "B"
											},
											{
												"type": "typeParameter",
												"name": "C"
											},
											{
												"type": "typeParameter",
												"name": "D"
											}
										]
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "typeParameter",
										"name": "A"
									},
									{
										"type": "typeParameter",
										"name": "B"
									},
									{
										"type": "typeParameter",
										"name": "C"
									},
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 707,
							"name": "mergeAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 708,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 709,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 710,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 711,
									"name": "D",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 712,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 713,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "typeParameter",
												"name": "A"
											},
											{
												"type": "typeParameter",
												"name": "B"
											},
											{
												"type": "typeParameter",
												"name": "C"
											},
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "typeParameter",
												"name": "E"
											}
										]
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "typeParameter",
										"name": "A"
									},
									{
										"type": "typeParameter",
										"name": "B"
									},
									{
										"type": "typeParameter",
										"name": "C"
									},
									{
										"type": "typeParameter",
										"name": "D"
									},
									{
										"type": "typeParameter",
										"name": "E"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "mergeAll.ts",
							"line": 10,
							"character": 24
						},
						{
							"fileName": "mergeAll.ts",
							"line": 11,
							"character": 24
						},
						{
							"fileName": "mergeAll.ts",
							"line": 12,
							"character": 24
						},
						{
							"fileName": "mergeAll.ts",
							"line": 13,
							"character": 24
						},
						{
							"fileName": "mergeAll.ts",
							"line": 14,
							"character": 24
						},
						{
							"fileName": "mergeAll.ts",
							"line": 18,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						688
					]
				}
			],
			"sources": [
				{
					"fileName": "mergeAll.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 714,
			"name": "\"mergeAll.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/mergeAll.test.ts",
			"sources": [
				{
					"fileName": "mergeAll.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 715,
			"name": "\"noop\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/noop.ts",
			"children": [
				{
					"id": 716,
					"name": "noop",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "A function that returns always `undefined`.",
						"tags": [
							{
								"tag": "signature",
								"text": "\n   R.noop()"
							},
							{
								"tag": "example",
								"text": "\n   onSomething(R.noop)"
							},
							{
								"tag": "category",
								"text": "Function\n"
							}
						]
					},
					"signatures": [
						{
							"id": 717,
							"name": "noop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "A function that returns always `undefined`."
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "noop.ts",
							"line": 9,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						716
					]
				}
			],
			"sources": [
				{
					"fileName": "noop.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 718,
			"name": "\"objOf\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/objOf.ts",
			"children": [
				{
					"id": 719,
					"name": "objOf",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 720,
							"name": "objOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates an object containing a single `key:value` pair.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.objOf(value, key)"
									},
									{
										"tag": "example",
										"text": "\n   R.objOf(10, 'a') // => { a: 10 }"
									},
									{
										"tag": "category",
										"text": "Object\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 721,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 722,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 723,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the object value"
									},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 724,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the property name"
									},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 725,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "objOf.ts",
											"line": 13,
											"character": 61
										}
									]
								}
							}
						},
						{
							"id": 726,
							"name": "objOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates an object containing a single `key:value` pair.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.objOf(key)(value)"
									},
									{
										"tag": "example",
										"text": "\n   R.pipe(10, R.objOf('a')) // => { a: 10 }"
									},
									{
										"tag": "category",
										"text": "Object\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 727,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 728,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 729,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the property name"
									},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 730,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 731,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 732,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 733,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "objOf.ts",
															"line": 26,
															"character": 16
														}
													]
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "objOf.ts",
											"line": 26,
											"character": 2
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "objOf.ts",
							"line": 13,
							"character": 21
						},
						{
							"fileName": "objOf.ts",
							"line": 24,
							"character": 21
						},
						{
							"fileName": "objOf.ts",
							"line": 28,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						719
					]
				}
			],
			"sources": [
				{
					"fileName": "objOf.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 734,
			"name": "\"objOf.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/objOf.test.ts",
			"sources": [
				{
					"fileName": "objOf.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 735,
			"name": "\"omit\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/omit.ts",
			"children": [
				{
					"id": 736,
					"name": "Omit",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 737,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 738,
							"name": "K",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "typeParameter",
									"name": "T"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "omit.ts",
							"line": 3,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "Pick",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T"
							},
							{
								"type": "reference",
								"name": "Exclude",
								"typeArguments": [
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "T"
										}
									},
									{
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"id": 739,
					"name": "omit",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 740,
							"name": "omit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a partial copy of an object omitting the keys specified.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.omit(obj, names);"
									},
									{
										"tag": "example",
										"text": "\n   R.omit({ a: 1, b: 2, c: 3, d: 4 }, ['a', 'd']) // => { b: 2, c: 3 }"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Object\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 741,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "__type"
									}
								},
								{
									"id": 742,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 743,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the object"
									},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "__type"
										}
									}
								},
								{
									"id": 744,
									"name": "names",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the property names"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "K",
											"constraint": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Omit",
								"id": 736,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "__type"
										}
									},
									{
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									}
								]
							}
						},
						{
							"id": 745,
							"name": "omit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a partial copy of an object omitting the keys specified.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.omit(names)(obj);"
									},
									{
										"tag": "example",
										"text": "\n   R.pipe({ a: 1, b: 2, c: 3, d: 4 }, R.omit(['a', 'd'])) // => { b: 2, c: 3 }"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Object\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 746,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "__type"
									}
								},
								{
									"id": 747,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 748,
									"name": "names",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the property names"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "K",
											"constraint": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 749,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 750,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 751,
													"name": "object",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "the object"
													},
													"type": {
														"type": "typeParameter",
														"name": "T",
														"constraint": {
															"type": "reference",
															"name": "__type"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Omit",
												"id": 736,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T",
														"constraint": {
															"type": "reference",
															"name": "__type"
														}
													},
													{
														"type": "typeParameter",
														"name": "K",
														"constraint": {
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "omit.ts",
											"line": 34,
											"character": 2
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "omit.ts",
							"line": 16,
							"character": 20
						},
						{
							"fileName": "omit.ts",
							"line": 32,
							"character": 20
						},
						{
							"fileName": "omit.ts",
							"line": 36,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						736
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						739
					]
				}
			],
			"sources": [
				{
					"fileName": "omit.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 752,
			"name": "\"omit.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/omit.test.ts",
			"sources": [
				{
					"fileName": "omit.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 753,
			"name": "\"once\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/once.ts",
			"children": [
				{
					"id": 754,
					"name": "once",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 755,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a function that is restricted to invoking `func` once. Repeat calls to the function return the value of the first invocation.",
								"tags": [
									{
										"tag": "signature",
										"text": "R.once(fn)"
									},
									{
										"tag": "example",
										"text": "\nconst initialize = _.once(createApplication);\ninitialize();\ninitialize();\n// => `createApplication` is invoked once"
									},
									{
										"tag": "category",
										"text": "Function\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 756,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 757,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the function to wrap"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 758,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 759,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											],
											"sources": [
												{
													"fileName": "once.ts",
													"line": 12,
													"character": 27
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 760,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 761,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"sources": [
										{
											"fileName": "once.ts",
											"line": 12,
											"character": 37
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "once.ts",
							"line": 12,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						754
					]
				}
			],
			"sources": [
				{
					"fileName": "once.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 762,
			"name": "\"once.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/once.test.ts",
			"sources": [
				{
					"fileName": "once.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 763,
			"name": "\"pathOr\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/pathOr.ts",
			"children": [
				{
					"id": 764,
					"name": "pathOr",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 765,
							"name": "pathOr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the value at `path` of `object`. If the resolved value is `undefined`, the `defaultValue` is returned in its place.",
								"tags": [
									{
										"tag": "signature",
										"text": "R.pathOr(object, [propName], defaultValue)"
									},
									{
										"tag": "example",
										"text": "\n   pathOr({x: 10}, ['y'], 2) // 2\n   pathOr({y: 10}, ['y'], 2) // 10"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Object\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 766,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 767,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 768,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the target object"
									},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 769,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path of the property to get"
									},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											}
										]
									}
								},
								{
									"id": 770,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the default value"
									},
									"type": {
										"type": "unknown",
										"name": "T[A]"
									}
								}
							],
							"type": {
								"type": "unknown",
								"name": "T[A]"
							}
						},
						{
							"id": 771,
							"name": "pathOr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 772,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 773,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 774,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "unknown",
											"name": "T[A]"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 775,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 776,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											},
											{
												"type": "typeParameter",
												"name": "B",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "unknown",
														"name": "T[A]"
													}
												}
											}
										]
									}
								},
								{
									"id": 777,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "unknown",
										"name": "T[A][B]"
									}
								}
							],
							"type": {
								"type": "unknown",
								"name": "T[A][B]"
							}
						},
						{
							"id": 778,
							"name": "pathOr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 779,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 780,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 781,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "unknown",
											"name": "T[A]"
										}
									}
								},
								{
									"id": 782,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "unknown",
											"name": "T[A][B]"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 783,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 784,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											},
											{
												"type": "typeParameter",
												"name": "B",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "unknown",
														"name": "T[A]"
													}
												}
											},
											{
												"type": "typeParameter",
												"name": "C",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "unknown",
														"name": "T[A][B]"
													}
												}
											}
										]
									}
								},
								{
									"id": 785,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "unknown",
										"name": "T[A][B][C]"
									}
								}
							],
							"type": {
								"type": "unknown",
								"name": "T[A][B][C]"
							}
						},
						{
							"id": 786,
							"name": "pathOr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the value at `path` of `object`. If the resolved value is `undefined`, the `defaultValue` is returned in its place.",
								"tags": [
									{
										"tag": "signature",
										"text": "R.pathOr([propName], defaultValue)(object)"
									},
									{
										"tag": "example",
										"text": "\n   pipe({x: 10}, pathOr(['y'], 2)) // 2\n   pipe({y: 10}, pathOr(['y'], 2)) // 10"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Object\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 787,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 788,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 789,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the path of the property to get"
									},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											}
										]
									}
								},
								{
									"id": 790,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the default value"
									},
									"type": {
										"type": "unknown",
										"name": "T[A]"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 791,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 792,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 793,
													"name": "object",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "the target object"
													},
													"type": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "unknown",
												"name": "T[A]"
											}
										}
									],
									"sources": [
										{
											"fileName": "pathOr.ts",
											"line": 49,
											"character": 2
										}
									]
								}
							}
						},
						{
							"id": 794,
							"name": "pathOr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 795,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 796,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 797,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "unknown",
											"name": "T[A]"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 798,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											},
											{
												"type": "typeParameter",
												"name": "B",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "unknown",
														"name": "T[A]"
													}
												}
											}
										]
									}
								},
								{
									"id": 799,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "unknown",
										"name": "T[A][B]"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 800,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 801,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 802,
													"name": "object",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "unknown",
												"name": "T[A][B]"
											}
										}
									],
									"sources": [
										{
											"fileName": "pathOr.ts",
											"line": 54,
											"character": 2
										}
									]
								}
							}
						},
						{
							"id": 803,
							"name": "pathOr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 804,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 805,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 806,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "unknown",
											"name": "T[A]"
										}
									}
								},
								{
									"id": 807,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "unknown",
											"name": "T[A][B]"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 808,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											},
											{
												"type": "typeParameter",
												"name": "B",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "unknown",
														"name": "T[A]"
													}
												}
											},
											{
												"type": "typeParameter",
												"name": "C",
												"constraint": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "unknown",
														"name": "T[A][B]"
													}
												}
											}
										]
									}
								},
								{
									"id": 809,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "unknown",
										"name": "T[A][B][C]"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 810,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 811,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 812,
													"name": "object",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "unknown",
												"name": "T[A][B][C]"
											}
										}
									],
									"sources": [
										{
											"fileName": "pathOr.ts",
											"line": 61,
											"character": 45
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "pathOr.ts",
							"line": 15,
							"character": 22
						},
						{
							"fileName": "pathOr.ts",
							"line": 21,
							"character": 22
						},
						{
							"fileName": "pathOr.ts",
							"line": 27,
							"character": 22
						},
						{
							"fileName": "pathOr.ts",
							"line": 46,
							"character": 22
						},
						{
							"fileName": "pathOr.ts",
							"line": 51,
							"character": 22
						},
						{
							"fileName": "pathOr.ts",
							"line": 56,
							"character": 22
						},
						{
							"fileName": "pathOr.ts",
							"line": 63,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						764
					]
				}
			],
			"sources": [
				{
					"fileName": "pathOr.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 813,
			"name": "\"pathOr.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/pathOr.test.ts",
			"sources": [
				{
					"fileName": "pathOr.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 814,
			"name": "\"pick\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/pick.ts",
			"children": [
				{
					"id": 815,
					"name": "pick",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 816,
							"name": "pick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates an object composed of the picked `object` properties.",
								"tags": [
									{
										"tag": "signature",
										"text": "R.pick(object, [prop1, prop2])"
									},
									{
										"tag": "example",
										"text": "\n   R.pick({ a: 1, b: 2, c: 3, d: 4 }, ['a', 'd']) // => { a: 1, d: 4 }"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Object\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 817,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "__type"
									}
								},
								{
									"id": 818,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 819,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the target object"
									},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "__type"
										}
									}
								},
								{
									"id": 820,
									"name": "names",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the properties names"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "K",
											"constraint": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Pick",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "__type"
										}
									},
									{
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									}
								]
							}
						},
						{
							"id": 821,
							"name": "pick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates an object composed of the picked `object` properties.",
								"tags": [
									{
										"tag": "signature",
										"text": "R.pick([prop1, prop2])(object)"
									},
									{
										"tag": "example",
										"text": "\n   R.pipe({ a: 1, b: 2, c: 3, d: 4 }, R.pick(['a', 'd'])) // => { a: 1, d: 4 }"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Object\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 822,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "__type"
									}
								},
								{
									"id": 823,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 824,
									"name": "names",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the properties names"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "K",
											"constraint": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 825,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 826,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 827,
													"name": "object",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "T",
														"constraint": {
															"type": "reference",
															"name": "__type"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Pick",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T",
														"constraint": {
															"type": "reference",
															"name": "__type"
														}
													},
													{
														"type": "typeParameter",
														"name": "K",
														"constraint": {
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "pick.ts",
											"line": 29,
											"character": 2
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "pick.ts",
							"line": 13,
							"character": 20
						},
						{
							"fileName": "pick.ts",
							"line": 27,
							"character": 20
						},
						{
							"fileName": "pick.ts",
							"line": 31,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						815
					]
				}
			],
			"sources": [
				{
					"fileName": "pick.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 828,
			"name": "\"pick.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/pick.test.ts",
			"sources": [
				{
					"fileName": "pick.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 26,
			"name": "\"pipe\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/pipe.ts",
			"children": [
				{
					"id": 27,
					"name": "pipe",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 28,
							"name": "pipe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Perform left-to-right function composition.",
								"tags": [
									{
										"tag": "signature",
										"text": "R.pipe(data, op1, op2, op3)"
									},
									{
										"tag": "example",
										"text": "\n   R.pipe(\n     [1, 2, 3, 4],\n     R.map(x => x * 2),\n     arr => [arr[0] + arr[1], arr[2] + arr[3]],\n   ) // => [6, 14]\n\n"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Function\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 29,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 30,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 31,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The initial value."
									},
									"type": {
										"type": "typeParameter",
										"name": "A"
									}
								},
								{
									"id": 32,
									"name": "op1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 33,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 34,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 35,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "A"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "B"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 17,
													"character": 41
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "B"
							}
						},
						{
							"id": 36,
							"name": "pipe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 37,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 38,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 39,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 40,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "A"
									}
								},
								{
									"id": 41,
									"name": "op1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 42,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 43,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 44,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "A"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "B"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 20,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 45,
									"name": "op2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 46,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 47,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 48,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "B"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "C"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 21,
													"character": 6
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "C"
							}
						},
						{
							"id": 49,
							"name": "pipe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 50,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 51,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 52,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 53,
									"name": "D",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 54,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "A"
									}
								},
								{
									"id": 55,
									"name": "op1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 56,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 57,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 58,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "A"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "B"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 26,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 59,
									"name": "op2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 61,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 62,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "B"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "C"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 27,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 63,
									"name": "op3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 64,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 65,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 66,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "C"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "D"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 28,
													"character": 6
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 67,
							"name": "pipe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 68,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 69,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 70,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 71,
									"name": "D",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 72,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 73,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "A"
									}
								},
								{
									"id": 74,
									"name": "op1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 75,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 76,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 77,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "A"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "B"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 33,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 78,
									"name": "op2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 79,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 80,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 81,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "B"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "C"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 34,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 82,
									"name": "op3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 83,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 84,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 85,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "C"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "D"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 35,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 86,
									"name": "op4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 87,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 88,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 89,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "D"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 36,
													"character": 6
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "E"
							}
						},
						{
							"id": 90,
							"name": "pipe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 91,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 92,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 93,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 94,
									"name": "D",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 95,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 96,
									"name": "F",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 97,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "A"
									}
								},
								{
									"id": 98,
									"name": "op1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 99,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 100,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 101,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "A"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "B"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 41,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 102,
									"name": "op2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 103,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 104,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 105,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "B"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "C"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 42,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 106,
									"name": "op3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 107,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 108,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 109,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "C"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "D"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 43,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 110,
									"name": "op4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 111,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 112,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 113,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "D"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 44,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 114,
									"name": "op5",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 115,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 116,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 117,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "F"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 45,
													"character": 6
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "F"
							}
						},
						{
							"id": 118,
							"name": "pipe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 119,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 120,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 121,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 122,
									"name": "D",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 123,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 124,
									"name": "F",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 125,
									"name": "G",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 126,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "A"
									}
								},
								{
									"id": 127,
									"name": "op1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 128,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 129,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 130,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "A"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "B"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 50,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 131,
									"name": "op2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 132,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 133,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 134,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "B"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "C"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 51,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 135,
									"name": "op3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 136,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 137,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 138,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "C"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "D"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 52,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 139,
									"name": "op4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 140,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 141,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 142,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "D"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 53,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 143,
									"name": "op5",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 144,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 145,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 146,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "F"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 54,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 147,
									"name": "op6",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 148,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 149,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 150,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "F"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "G"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 55,
													"character": 6
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "G"
							}
						},
						{
							"id": 151,
							"name": "pipe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 152,
									"name": "A",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 153,
									"name": "B",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 154,
									"name": "C",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 155,
									"name": "D",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 156,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 157,
									"name": "F",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 158,
									"name": "G",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 159,
									"name": "H",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 160,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "A"
									}
								},
								{
									"id": 161,
									"name": "op1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 162,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 163,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 164,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "A"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "B"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 60,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 165,
									"name": "op2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 166,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 167,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 168,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "B"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "C"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 61,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 169,
									"name": "op3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 170,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 171,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 172,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "C"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "D"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 62,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 173,
									"name": "op4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 174,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 175,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 176,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "D"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "E"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 63,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 177,
									"name": "op5",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 178,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 179,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 180,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "E"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "F"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 64,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 181,
									"name": "op6",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 182,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 183,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 184,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "F"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "G"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 65,
													"character": 6
												}
											]
										}
									}
								},
								{
									"id": 185,
									"name": "op7",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 186,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 187,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 188,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "G"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "H"
													}
												}
											],
											"sources": [
												{
													"fileName": "pipe.ts",
													"line": 66,
													"character": 6
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "H"
							}
						}
					],
					"sources": [
						{
							"fileName": "pipe.ts",
							"line": 17,
							"character": 20
						},
						{
							"fileName": "pipe.ts",
							"line": 18,
							"character": 20
						},
						{
							"fileName": "pipe.ts",
							"line": 24,
							"character": 20
						},
						{
							"fileName": "pipe.ts",
							"line": 31,
							"character": 20
						},
						{
							"fileName": "pipe.ts",
							"line": 39,
							"character": 20
						},
						{
							"fileName": "pipe.ts",
							"line": 48,
							"character": 20
						},
						{
							"fileName": "pipe.ts",
							"line": 58,
							"character": 20
						},
						{
							"fileName": "pipe.ts",
							"line": 69,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						27
					]
				}
			],
			"sources": [
				{
					"fileName": "pipe.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 829,
			"name": "\"pipe.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/pipe.test.ts",
			"sources": [
				{
					"fileName": "pipe.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 830,
			"name": "\"prop\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/prop.ts",
			"children": [
				{
					"id": 831,
					"name": "prop",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 832,
							"name": "prop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the value of the given property.",
								"tags": [
									{
										"tag": "signature",
										"text": "R.prop(prop)(object)"
									},
									{
										"tag": "example",
										"text": "\n   R.pipe({foo: 'bar'}, R.prop('foo')) // => 'bar'"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Object\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 833,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 834,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 835,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the property name"
									},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "(Anonymous function)"
							}
						}
					],
					"sources": [
						{
							"fileName": "prop.ts",
							"line": 10,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						831
					]
				}
			],
			"sources": [
				{
					"fileName": "prop.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 836,
			"name": "\"prop.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/prop.test.ts",
			"sources": [
				{
					"fileName": "prop.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"purry\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/purry.ts",
			"children": [
				{
					"id": 2,
					"name": "purry",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3,
							"name": "purry",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a function with `data-first` and `data-last` signatures.",
								"text": "`purry` is a dynamic function and it's not type safe. It should be wrapped by a function that have proper typings.\nRefer to the example below to see usage a correct usage.\n",
								"tags": [
									{
										"tag": "signature",
										"text": "R.purry(fn, arguments);"
									},
									{
										"tag": "example-raw",
										"text": "\n   function _findIndex(array, fn) {\n     for (let i = 0; i < array.length; i++) {\n       if (fn(array[i])) {\n         return i;\n       }\n     }\n     return -1;\n   }\n\n   // data-first\n   function findIndex<T>(array: T[], fn: (item: T) => boolean): number;\n\n   // data-last\n   function findIndex<T>(fn: (item: T) => boolean): (array: T[]) => number;\n\n   function findIndex() {\n     return R.purry(_findIndex, arguments);\n   }"
									},
									{
										"tag": "category",
										"text": "Function\n"
									}
								]
							},
							"parameters": [
								{
									"id": 4,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the function to purry."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 5,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the arguments"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IArguments"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "purry.ts",
							"line": 31,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "purry.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 837,
			"name": "\"purry.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/purry.test.ts",
			"sources": [
				{
					"fileName": "purry.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 848,
			"name": "\"randomString\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/randomString.ts",
			"children": [
				{
					"id": 849,
					"name": "randomString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 850,
							"name": "randomString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Random a non-cryptographic random string from characters a-zA-Z0-9.",
								"tags": [
									{
										"tag": "signature",
										"text": "randomString(length)"
									},
									{
										"tag": "example",
										"text": "\n   randomString(5) // => aB92J"
									},
									{
										"tag": "category",
										"text": "String\n"
									}
								]
							},
							"parameters": [
								{
									"id": 851,
									"name": "length",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the length of the random string"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "randomString.ts",
							"line": 11,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						849
					]
				}
			],
			"sources": [
				{
					"fileName": "randomString.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 852,
			"name": "\"randomString.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/randomString.test.ts",
			"sources": [
				{
					"fileName": "randomString.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 838,
			"name": "\"range\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/range.ts",
			"children": [
				{
					"id": 839,
					"name": "range",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 840,
							"name": "range",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a list of numbers from `start` (inclusive) to `end` (exclusive).",
								"tags": [
									{
										"tag": "signature",
										"text": "range(start, end)"
									},
									{
										"tag": "example",
										"text": "\n   R.range(1, 5) // => [1, 2, 3, 4]"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"parameters": [
								{
									"id": 841,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the start number"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 842,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the end number"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						},
						{
							"id": 843,
							"name": "range",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a list of numbers from `start` (inclusive) to `end` (exclusive).",
								"tags": [
									{
										"tag": "signature",
										"text": "range(end)(start)"
									},
									{
										"tag": "example",
										"text": "\n   R.range(5)(1) // => [1, 2, 3, 4]"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"parameters": [
								{
									"id": 844,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the end number"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 845,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 846,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 847,
													"name": "start",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "range.ts",
											"line": 24,
											"character": 35
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "range.ts",
							"line": 13,
							"character": 21
						},
						{
							"fileName": "range.ts",
							"line": 24,
							"character": 21
						},
						{
							"fileName": "range.ts",
							"line": 26,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						839
					]
				}
			],
			"sources": [
				{
					"fileName": "range.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 853,
			"name": "\"range.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/range.test.ts",
			"sources": [
				{
					"fileName": "range.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 854,
			"name": "\"reduce\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/reduce.ts",
			"children": [
				{
					"id": 855,
					"name": "reduce",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 856,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.reduce(items, fn, initialValue)"
									},
									{
										"tag": "example",
										"text": "\n   R.reduce([1, 2, 3, 4, 5], (acc, x) => acc + x, 100) // => 115"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 857,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 858,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 859,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 860,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the callback function"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 861,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 862,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 863,
															"name": "acc",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														},
														{
															"id": 864,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "K"
													}
												}
											],
											"sources": [
												{
													"fileName": "reduce.ts",
													"line": 17,
													"character": 5
												}
											]
										}
									}
								},
								{
									"id": 865,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the initial value to use as an accumulator value in the callback function"
									},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "K"
							}
						},
						{
							"id": 866,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.reduce(fn, initialValue)(array)"
									},
									{
										"tag": "example",
										"text": "\n   R.pipe([1, 2, 3, 4, 5], R.reduce((acc, x) => acc + x, 100)) // => 115"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 867,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 868,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 869,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the callback function"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 870,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 871,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 872,
															"name": "acc",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "K"
															}
														},
														{
															"id": 873,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "K"
													}
												}
											],
											"sources": [
												{
													"fileName": "reduce.ts",
													"line": 33,
													"character": 5
												}
											]
										}
									}
								},
								{
									"id": 874,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the initial value to use as an accumulator value in the callback function"
									},
									"type": {
										"type": "typeParameter",
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 875,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 876,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 877,
													"name": "items",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												}
											],
											"type": {
												"type": "typeParameter",
												"name": "K"
											}
										}
									],
									"sources": [
										{
											"fileName": "reduce.ts",
											"line": 35,
											"character": 2
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "reduce.ts",
							"line": 15,
							"character": 22
						},
						{
							"fileName": "reduce.ts",
							"line": 32,
							"character": 22
						},
						{
							"fileName": "reduce.ts",
							"line": 37,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						855
					]
				}
			],
			"sources": [
				{
					"fileName": "reduce.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 878,
			"name": "\"reduce.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/reduce.test.ts",
			"sources": [
				{
					"fileName": "reduce.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 879,
			"name": "\"reject\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/reject.ts",
			"children": [
				{
					"id": 880,
					"name": "reject",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 881,
							"name": "reject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reject the elements of an array that meet the condition specified in a callback function.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.reject(array, fn)"
									},
									{
										"tag": "example",
										"text": "\n   R.reject([1, 2, 3], x => x % 2 === 0) // => [1, 3]"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 882,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 883,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The array to filter."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 884,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the callback function."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 885,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 886,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 887,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "reject.ts",
													"line": 14,
													"character": 41
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "T"
								}
							}
						},
						{
							"id": 888,
							"name": "reject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reject the elements of an array that meet the condition specified in a callback function.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.reject(array, fn)"
									},
									{
										"tag": "example",
										"text": "\n   R.reject([1, 2, 3], x => x % 2 === 0) // => [1, 3]"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 889,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 890,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the callback function."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 891,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 892,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 893,
															"name": "input",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "reject.ts",
													"line": 27,
													"character": 29
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 894,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 895,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 896,
													"name": "items",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The array to filter."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "reject.ts",
											"line": 27,
											"character": 53
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "reject.ts",
							"line": 14,
							"character": 22
						},
						{
							"fileName": "reject.ts",
							"line": 27,
							"character": 22
						},
						{
							"fileName": "reject.ts",
							"line": 29,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						880
					]
				}
			],
			"sources": [
				{
					"fileName": "reject.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 897,
			"name": "\"reject.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/reject.test.ts",
			"sources": [
				{
					"fileName": "reject.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 898,
			"name": "\"set\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/set.ts",
			"children": [
				{
					"id": 899,
					"name": "set",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 900,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the `value` at `prop` of `object`.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.set(obj, prop, value)"
									},
									{
										"tag": "example",
										"text": "\n   R.set({ a: 1 }, 'a', 2) // => { a: 2 }"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Object\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 901,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 902,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 903,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the target method"
									},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 904,
									"name": "prop",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the property name"
									},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									}
								},
								{
									"id": 905,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the value to set"
									},
									"type": {
										"type": "unknown",
										"name": "T[K]"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						},
						{
							"id": 906,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the `value` at `prop` of `object`.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.set(prop, value)(obj)"
									},
									{
										"tag": "example",
										"text": "\n   R.pipe({ a: 1 }, R.set('a', 2)) // => { a: 2 }"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Object\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 907,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 908,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 909,
									"name": "prop",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the property name"
									},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									}
								},
								{
									"id": 910,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the value to set"
									},
									"type": {
										"type": "unknown",
										"name": "T[K]"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 911,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 912,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 913,
													"name": "obj",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"sources": [
										{
											"fileName": "set.ts",
											"line": 28,
											"character": 64
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "set.ts",
							"line": 15,
							"character": 19
						},
						{
							"fileName": "set.ts",
							"line": 28,
							"character": 19
						},
						{
							"fileName": "set.ts",
							"line": 30,
							"character": 19
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						899
					]
				}
			],
			"sources": [
				{
					"fileName": "set.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 914,
			"name": "\"set.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/set.test.ts",
			"sources": [
				{
					"fileName": "set.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 915,
			"name": "\"sort\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/sort.ts",
			"children": [
				{
					"id": 916,
					"name": "sort",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 917,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sorts an array. The comparator function should accept two values at a time and return a negative number if the first value is smaller, a positive number if it's larger, and zero if they are equal.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.sort(items, cmp)"
									},
									{
										"tag": "example",
										"text": "\n   R.sort([4, 2, 7, 5], (a, b) => a - b) // => [2, 4, 5, 7]"
									},
									{
										"tag": "data_first",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 918,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 919,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the array to sort"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 920,
									"name": "cmp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the comparator function"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 921,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 922,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 923,
															"name": "a",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 924,
															"name": "b",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "sort.ts",
													"line": 14,
													"character": 40
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "T"
								}
							}
						},
						{
							"id": 925,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sorts an array. The comparator function should accept two values at a time and return a negative number if the first value is smaller, a positive number if it's larger, and zero if they are equal.",
								"tags": [
									{
										"tag": "signature",
										"text": "\n   R.sort(cmp)(items)"
									},
									{
										"tag": "example",
										"text": "\n   R.pipe([4, 2, 7, 5], R.sort((a, b) => a - b)) // => [2, 4, 5, 7]"
									},
									{
										"tag": "data_last",
										"text": ""
									},
									{
										"tag": "category",
										"text": "Array\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 926,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 927,
									"name": "cmp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the comparator function"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 928,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 929,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 930,
															"name": "a",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														},
														{
															"id": 931,
															"name": "b",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "sort.ts",
													"line": 26,
													"character": 28
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 932,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 933,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 934,
													"name": "items",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "sort.ts",
											"line": 26,
											"character": 53
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "sort.ts",
							"line": 14,
							"character": 20
						},
						{
							"fileName": "sort.ts",
							"line": 26,
							"character": 20
						},
						{
							"fileName": "sort.ts",
							"line": 28,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						916
					]
				}
			],
			"sources": [
				{
					"fileName": "sort.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 935,
			"name": "\"sort.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/sort.test.ts",
			"sources": [
				{
					"fileName": "sort.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 936,
			"name": "\"sortBy\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/sortBy.ts",
			"children": [
				{
					"id": 937,
					"name": "sortBy",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 938,
							"name": "sortBy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 939,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 940,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 941,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 942,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 943,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 944,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "sortBy.ts",
													"line": 1,
													"character": 41
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "T"
								}
							}
						},
						{
							"id": 945,
							"name": "sortBy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 946,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 947,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 948,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 949,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 950,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "sortBy.ts",
													"line": 2,
													"character": 29
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 951,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 952,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 953,
													"name": "items",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "sortBy.ts",
											"line": 2,
											"character": 48
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "sortBy.ts",
							"line": 1,
							"character": 22
						},
						{
							"fileName": "sortBy.ts",
							"line": 2,
							"character": 22
						},
						{
							"fileName": "sortBy.ts",
							"line": 4,
							"character": 22
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						937
					]
				}
			],
			"sources": [
				{
					"fileName": "sortBy.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 954,
			"name": "\"sortBy.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/sortBy.test.ts",
			"sources": [
				{
					"fileName": "sortBy.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 955,
			"name": "\"splitAt\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/splitAt.ts",
			"children": [
				{
					"id": 956,
					"name": "splitAt",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 957,
							"name": "splitAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 958,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 959,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 960,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "unknown",
										"name": "T"
									}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "splitAt.ts",
							"line": 1,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						956
					]
				}
			],
			"sources": [
				{
					"fileName": "splitAt.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 961,
			"name": "\"splitAt.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/splitAt.test.ts",
			"sources": [
				{
					"fileName": "splitAt.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 962,
			"name": "\"splitWhen\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/splitWhen.ts",
			"children": [
				{
					"id": 963,
					"name": "splitWhen",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 964,
							"name": "splitWhen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 965,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 966,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 967,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 968,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 969,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 970,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "splitWhen.ts",
													"line": 3,
													"character": 44
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "unknown",
										"name": "T"
									}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "splitWhen.ts",
							"line": 3,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						963
					]
				}
			],
			"sources": [
				{
					"fileName": "splitWhen.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 971,
			"name": "\"splitWhen.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/splitWhen.test.ts",
			"sources": [
				{
					"fileName": "splitWhen.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 972,
			"name": "\"takeWhile\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/takeWhile.ts",
			"children": [
				{
					"id": 973,
					"name": "takeWhile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 974,
							"name": "takeWhile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 975,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 976,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 977,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 978,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 979,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 980,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "takeWhile.ts",
													"line": 1,
													"character": 44
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "unknown",
									"name": "T"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "takeWhile.ts",
							"line": 1,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						973
					]
				}
			],
			"sources": [
				{
					"fileName": "takeWhile.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 981,
			"name": "\"takeWhile.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/takeWhile.test.ts",
			"sources": [
				{
					"fileName": "takeWhile.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 982,
			"name": "\"toPairs\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/toPairs.ts",
			"children": [
				{
					"id": 983,
					"name": "toPairs",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 984,
							"name": "toPairs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 985,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 986,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 987,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": {
												"id": 988,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 989,
														"name": "s",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "typeParameter",
													"name": "T"
												}
											},
											"sources": [
												{
													"fileName": "toPairs.ts",
													"line": 1,
													"character": 34
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "toPairs.ts",
							"line": 1,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						983
					]
				}
			],
			"sources": [
				{
					"fileName": "toPairs.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 990,
			"name": "\"toPairs.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/toPairs.test.ts",
			"sources": [
				{
					"fileName": "toPairs.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 235,
			"name": "\"type\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/type.ts",
			"children": [
				{
					"id": 236,
					"name": "type",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 237,
							"name": "type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 238,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "type.ts",
							"line": 3,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						236
					]
				}
			],
			"sources": [
				{
					"fileName": "type.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 991,
			"name": "\"type.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/type.test.ts",
			"sources": [
				{
					"fileName": "type.test.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 992,
			"name": "\"uniq\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/uniq.ts",
			"children": [
				{
					"id": 993,
					"name": "uniq",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 994,
							"name": "uniq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 995,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 996,
									"name": "array",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "unknown",
									"name": "T"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "uniq.ts",
							"line": 1,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						993
					]
				}
			],
			"sources": [
				{
					"fileName": "uniq.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 997,
			"name": "\"uniq.test\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sky/work/npm/remeda/src/uniq.test.ts",
			"sources": [
				{
					"fileName": "uniq.test.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				6,
				189,
				190,
				208,
				209,
				221,
				222,
				234,
				239,
				243,
				244,
				249,
				250,
				264,
				265,
				442,
				443,
				455,
				456,
				468,
				469,
				479,
				480,
				498,
				499,
				517,
				518,
				536,
				542,
				562,
				537,
				563,
				564,
				569,
				570,
				588,
				589,
				607,
				608,
				614,
				615,
				620,
				621,
				642,
				643,
				671,
				672,
				686,
				687,
				714,
				715,
				718,
				734,
				735,
				752,
				753,
				762,
				763,
				813,
				814,
				828,
				26,
				829,
				830,
				836,
				1,
				837,
				848,
				852,
				838,
				853,
				854,
				878,
				879,
				897,
				898,
				914,
				915,
				935,
				936,
				954,
				955,
				961,
				962,
				971,
				972,
				981,
				982,
				990,
				235,
				991,
				992,
				997
			]
		}
	]
}